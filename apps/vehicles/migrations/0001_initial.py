# Generated by Django 5.2.3 on 2025-07-01 11:07

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VehicleCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='E.g., Sedan, SUV, Van, Shortlet Apartment, Luxury', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Vehicle Category',
                'verbose_name_plural': 'Vehicle Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VehicleFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='E.g., Air Conditioning, GPS Navigation, Sunroof, Leather Seats, Bluetooth', max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Vehicle Feature',
                'verbose_name_plural': 'Vehicle Features',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VehicleMake',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='E.g., Toyota, BMW, Mercedes-Benz', max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
            ],
            options={
                'verbose_name': 'Vehicle Make',
                'verbose_name_plural': 'Vehicle Makes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(help_text='Year of manufacture, e.g., 2022')),
                ('color', models.CharField(blank=True, max_length=50)),
                ('license_plate', models.CharField(blank=True, help_text='Vehicle registration number (optional, for tracking)', max_length=20, null=True, unique=True)),
                ('mileage', models.PositiveIntegerField(blank=True, help_text='Current mileage in kilometers (optional)', null=True)),
                ('engine_details', models.CharField(blank=True, help_text='E.g., 2.5L 4-Cylinder, V6 Turbo', max_length=100)),
                ('fuel_type', models.CharField(blank=True, choices=[('Petrol', 'Petrol'), ('Diesel', 'Diesel'), ('Electric', 'Electric'), ('Hybrid', 'Hybrid')], max_length=20)),
                ('transmission', models.CharField(blank=True, choices=[('Automatic', 'Automatic'), ('Manual', 'Manual')], max_length=20)),
                ('description', models.TextField(help_text='Detailed description of the vehicle, its condition, and unique selling points.')),
                ('daily_rate_ngn', models.DecimalField(decimal_places=2, help_text='Price per day in NGN.', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('weekly_rate_ngn', models.DecimalField(blank=True, decimal_places=2, help_text='Optional: Price per week in NGN.', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('monthly_rate_ngn', models.DecimalField(blank=True, decimal_places=2, help_text='Optional: Price per month in NGN.', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('security_deposit_ngn', models.DecimalField(blank=True, decimal_places=2, help_text='Refundable security deposit in NGN.', max_digits=10, null=True)),
                ('main_image', models.ImageField(help_text='Primary image for the vehicle listing.', upload_to='vehicles/main_images/%Y/%m/')),
                ('availability_status', models.CharField(choices=[('Available', 'Available for Lease'), ('Leased', 'Currently Leased'), ('Maintenance', 'Under Maintenance'), ('Unavailable', 'Temporarily Unavailable')], default='Available', max_length=20)),
                ('is_published', models.BooleanField(default=True, help_text='Visible on the website.')),
                ('is_featured', models.BooleanField(default=False, help_text='Display on homepage featured section.')),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly identifier, auto-generated.', max_length=255, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, help_text='E.g., Sedan, SUV, Shortlet Apartment', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles', to='vehicles.vehiclecategory')),
                ('features', models.ManyToManyField(blank=True, related_name='vehicles', to='vehicles.vehiclefeature')),
            ],
            options={
                'verbose_name': 'Vehicle',
                'verbose_name_plural': 'Vehicles',
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='vehicles/gallery/%Y/%m/%d/')),
                ('caption', models.CharField(blank=True, help_text='Optional caption for the image.', max_length=150)),
                ('is_primary_gallery', models.BooleanField(default=False, help_text="If true, this could be used as the default image if Vehicle.main_image isn't set, or for ordering.")),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='vehicles.vehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Image',
                'verbose_name_plural': 'Vehicle Images',
                'ordering': ['vehicle', '-is_primary_gallery'],
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='E.g., Camry, X5, C-Class', max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=120)),
                ('make', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='vehicles.vehiclemake')),
            ],
            options={
                'verbose_name': 'Vehicle Model',
                'verbose_name_plural': 'Vehicle Models',
                'ordering': ['make__name', 'name'],
                'unique_together': {('make', 'name')},
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='vehicle_model',
            field=models.ForeignKey(help_text='Select the make and model', on_delete=django.db.models.deletion.PROTECT, related_name='vehicles', to='vehicles.vehiclemodel'),
        ),
    ]
